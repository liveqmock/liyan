<?xml version="1.0" encoding="UTF-8"?>
<ViewConfig>
  <Property name="metaData">
    <Property name="securityTag">SysProductManage</Property>
  </Property>
  <Arguments/>
  <Context/>
  <Model>
    <DataType name="dataTypeSysProduct" parent="global:dataTypeSysProduct">
      <ClientEvent name="onDataChange">if (arg.property==&quot;productCode&quot;){
	view.get(&quot;#checkCode&quot;).set(&quot;parameter&quot;, arg.value).execute(function(result) {
		if(result==&quot;true&quot;)
		{
			arg.entity.setMessages(&quot;productCode&quot;,{ state: &quot;error&quot;, text: &quot;该编号已经被使用,请重新输入!&quot; });
		}else{
			arg.entity.set(&quot;treeSeq&quot;,arg.entity.get(&quot;treeSeq&quot;)+arg.value+&quot;.&quot;)
		}
	});
};</ClientEvent>
      <Property name="autoCreatePropertyDefs">false</Property>
      <Reference name="children">
        <Property name="dataType">[SELF]</Property>
        <Property name="dataProvider">sysProductAction#findSysProductByParentId</Property>
        <Property name="parameter">$${this.id}</Property>
      </Reference>
      <PropertyDef name="manageOrgName">
        <Property name="dataType">String</Property>
        <Property name="label">管理部门</Property>
      </PropertyDef>
      <PropertyDef name="busilineName">
        <Property name="dataType">String</Property>
        <Property name="label">业务线名称</Property>
      </PropertyDef>
    </DataType>
    <DataType name="querydataTypeSysProduct">
      <Property name="autoCreatePropertyDefs">false</Property>
      <PropertyDef name="productName">
        <Property name="dataType">String</Property>
        <Property name="label">${req["com.innofi.component.rbac.product.pojo.SysProduct.productName"].propertyLabel}</Property>
      </PropertyDef>
      <PropertyDef name="productCode">
        <Property name="dataType">String</Property>
        <Property name="label">${req["com.innofi.component.rbac.product.pojo.SysProduct.productCode"].propertyLabel}</Property>
      </PropertyDef>
      <PropertyDef name="manageOrgCode">
        <Property name="dataType">String</Property>
        <Property name="label">管理部门</Property>
      </PropertyDef>
      <PropertyDef name="manageOrgName">
        <Property name="dataType">String</Property>
        <Property name="label">管理部门</Property>
      </PropertyDef>
      <PropertyDef name="busilineId">
        <Property name="dataType">String</Property>
      </PropertyDef>
      <PropertyDef name="busilineName">
        <Property name="dataType">String</Property>
        <Property name="label">业务线名称</Property>
      </PropertyDef>
    </DataType>
  </Model>
  <View>
    <Property name="packages">validator</Property>
    <DataSet id="dataSetSysProduct">
      <ClientEvent name="onReady">view.get(&quot;#dataSetSysProduct&quot;).set(&quot;parameter&quot;,{parentId: &quot;0&quot;}).flushAsync();</ClientEvent>
      <Property name="dataProvider">sysProductAction#findSysProducts</Property>
      <Property name="dataType">[dataTypeSysProduct]</Property>
      <Property name="pageSize">${sys.getLong(&quot;mdf.default.pagesize&quot;)}</Property>
    </DataSet>
    <DataSet id="querydataSetSysProduct">
      <ClientEvent name="onReady">self.insert({});</ClientEvent>
      <Property name="dataType">[querydataTypeSysProduct]</Property>
    </DataSet>
    <Container>
      <FieldSet layoutConstraint="top">
        <Property name="caption">查询条件</Property>
        <Property name="collapsed">false</Property>
        <Property name="hideMode">display</Property>
        <Buttons>
          <Button id="queryButton">
            <ClientEvent name="onClick">var entity=view.get(&quot;#querydataSetSysProduct&quot;).getData(&quot;#&quot;);
var productCode=entity.get(&quot;productCode&quot;);
var productName=entity.get(&quot;productName&quot;);
var manageOrgCode=entity.get(&quot;manageOrgCode&quot;);
var busilineId=entity.get(&quot;busilineId&quot;);

if((productCode==&quot;&quot; || productCode==undefined) &amp;&amp; (productName==&quot;&quot; || productName==undefined) &amp;&amp; (manageOrgCode==&quot;&quot; || manageOrgCode==undefined)&amp;&amp; (busilineId==&quot;&quot; || busilineId==undefined)){
	view.get(&quot;#dataSetSysProduct&quot;).set(&quot;parameter&quot;,{parentId: &quot;0&quot;}).flushAsync();
}else{
	view.get(&quot;#dataSetSysProduct&quot;).set(&quot;parameter&quot;, view.get(&quot;#querydataSetSysProduct&quot;).getData(&quot;#&quot;)).flushAsync();
}
</ClientEvent>
            <Property name="caption">查询</Property>
            <Property name="icon">url(>skin>common/icons.gif) -40px -100px</Property>
          </Button>
          <Button id="resetButton">
            <ClientEvent name="onClick">var entity = view.get(&quot;#querydataSetSysProduct&quot;).getData(&quot;#&quot;);
with (entity){
	set(&quot;productName&quot;,&quot;&quot;);
	set(&quot;productCode&quot;,&quot;&quot;);
	set(&quot;busilineId&quot;,&quot;&quot;);
	set(&quot;busilineName&quot;,&quot;&quot;);
	set(&quot;manageOrgCode&quot;,&quot;&quot;);
	set(&quot;manageOrgName&quot;,&quot;&quot;);
};
            
</ClientEvent>
            <Property name="icon">url(>skin>common/icons.gif) -280px -220px</Property>
            <Property name="caption">重置</Property>
          </Button>
        </Buttons>
        <Children>
          <AutoForm id="autoFormSysProductQuery" layoutConstraint="center">
            <Property name="cols">*,*</Property>
            <Property name="dataSet">querydataSetSysProduct</Property>
            <Property name="dataType">querydataTypeSysProduct</Property>
            <Property name="labelAlign">right</Property>
            <Property name="labelWidth">120</Property>
            <AutoFormElement name="autoFormElementproductName">
              <Property name="name">productName</Property>
              <Property name="property">productName</Property>
              <Editor/>
            </AutoFormElement>
            <AutoFormElement name="autoFormElementproductCode">
              <Property name="name">productCode</Property>
              <Property name="property">productCode</Property>
              <Editor/>
            </AutoFormElement>
            <AutoFormElement>
              <Property name="name">manageOrgName</Property>
              <Property name="property">manageOrgName</Property>
              <Property name="userData">
                <Entity>
                  <Property name="code">manageOrgCode</Property>
                </Entity>
              </Property>
              <Property name="trigger">orgSingleDropDown</Property>
              <Editor/>
            </AutoFormElement>
            <AutoFormElement>
              <Property name="name">busilineName</Property>
              <Property name="property">busilineName</Property>
              <Property name="userData">
                <Entity>
                  <Property name="code">busilineId</Property>
                </Entity>
              </Property>
              <Property name="trigger">busiSingleDropDown</Property>
              <Editor/>
            </AutoFormElement>
          </AutoForm>
        </Children>
      </FieldSet>
      <ToolBar id="toolBarSysProduct" layoutConstraint="top">
        <Property name="tags">tags_toolbar</Property>
        <ToolBarButton id="addButton">
          <ClientEvent name="onClick">var node=view.get(&quot;#productTree&quot;).get(&quot;currentNode&quot;);
if(node==undefined){
	view.get(&quot;#dataSetSysProduct&quot;).getData().insert({&quot;parentId&quot;:&quot;0&quot;,&quot;treeSeq&quot;:&quot;.0.&quot;,&quot;status&quot;:&quot;1&quot;});
}else{
	var currEntity=node.get(&quot;data&quot;);
	var seq=currEntity.get(&quot;treeSeq&quot;);
	var len=seq.substr(0,seq.length-1).lastIndexOf(&quot;.&quot;);
	var treeSeq=currEntity.get(&quot;treeSeq&quot;).substr(0,len+1);
	var entity=currEntity.createBrother({parentId:currEntity.get(&quot;parentId&quot;),treeSeq:treeSeq,&quot;status&quot;:&quot;1&quot;});
	view.get(&quot;#productTree&quot;).set(&quot;currentEntity&quot;,entity);
}
view.get(&quot;#addDialogSysProduct&quot;).show();</ClientEvent>
          <Property name="icon">>icons/add2.png</Property>
          <Property name="caption">添加同级</Property>
        </ToolBarButton>
        <ToolBarButton id="addChildButton">
          <ClientEvent name="onClick">var currentNode=view.get(&quot;#productTree&quot;).get(&quot;currentNode&quot;);
if(currentNode==undefined){
	view.get(&quot;#dataSetSysProduct&quot;).getData().insert({&quot;parentId&quot;:&quot;0&quot;,&quot;treeSeq&quot;:&quot;.0.&quot;,&quot;status&quot;:&quot;1&quot;});
}else{
	var currentEntity = currentNode.get(&quot;data&quot;);
	currentNode.expandAsync(function() {
		var child = currentEntity.createChild(&quot;children&quot;, {
			parentId:currentEntity.get(&quot;id&quot;),treeSeq:currentEntity.get(&quot;treeSeq&quot;),&quot;status&quot;:&quot;1&quot;
		});
		view.get(&quot;#productTree&quot;).set(&quot;currentEntity&quot;,child);
	});
}
view.get(&quot;#addDialogSysProduct&quot;).show();</ClientEvent>
          <Property name="caption">添加下级</Property>
          <Property name="icon">url(>skin>common/icons.gif) -120px -0px</Property>
        </ToolBarButton>
        <ToolBarButton id="updateButton">
          <ClientEvent name="onClick">var node=view.get(&quot;#productTree&quot;).get(&quot;currentNode&quot;);
if(!node){
	throw new dorado.Exception(&quot;请先选择一个节点！&quot;);
}
view.get(&quot;#dialogSysProduct&quot;).show();
</ClientEvent>
          <Property name="caption">修改</Property>
          <Property name="icon">url(>skin>common/icons.gif) -200px -0px</Property>
        </ToolBarButton>
        <ToolBarButton id="delButton">
          <ClientEvent name="onClick">var node=view.get(&quot;#productTree&quot;).get(&quot;currentNode&quot;);
if(!node){
	throw new dorado.Exception(&quot;请先选择一个节点！&quot;);
}else{
	dorado.MessageBox.confirm(&quot;确定停用该业务线及其所有下级业务线？&quot;,function(){
		var productCode=node.get(&quot;data&quot;).get(&quot;productCode&quot;);
		var action=view.get(&quot;#delAction&quot;);
		action.set(&quot;parameter&quot;,productCode).execute(function(result){
			view.get(&quot;#dataSetSysProduct&quot;).set(&quot;parameter&quot;,{parentId: &quot;0&quot;}).flushAsync();
		});
	});
}</ClientEvent>
          <Property name="caption">停用</Property>
          <Property name="icon">url(>skin>common/icons.gif) -140px -0px</Property>
        </ToolBarButton>
      </ToolBar>
      <Container>
        <DataTreeGrid id="productTree">
          <Property name="dataSet">dataSetSysProduct</Property>
          <Property name="currentNodeDataPath">CURRENT_NODE</Property>
          <Property name="treeColumn">productCode</Property>
          <BindingConfigs>
            <BindingConfig>
              <Property name="childrenProperty">children</Property>
              <Property name="labelProperty">productCode</Property>
              <Property name="recursive">true</Property>
              <Property name="expandedIcon">>icons/product.png</Property>
              <Property name="icon">>icons/product.png </Property>
            </BindingConfig>
          </BindingConfigs>
          <Columns>
            <DataColumn name="productCode" property="productCode">
              <Property name="readOnly">true</Property>
            </DataColumn>
            <DataColumn name="productName" property="productName">
              <Property name="readOnly">true</Property>
            </DataColumn>
            <DataColumn name="productDesc" property="productDesc">
              <Property name="readOnly">true</Property>
            </DataColumn>
            <DataColumn>
              <Property name="readOnly">true</Property>
              <Property name="name">manageOrgName</Property>
              <Property name="property">manageOrgName</Property>
            </DataColumn>
            <DataColumn name="status" property="status">
              <Property name="readOnly">true</Property>
            </DataColumn>
          </Columns>
        </DataTreeGrid>
      </Container>
      <ToolBar layoutConstraint="bottom">
        <DataPilot>
          <Property name="dataSet">dataSetSysProduct</Property>
          <Property name="itemCodes">pages</Property>
        </DataPilot>
        <Separator/>
      </ToolBar>
    </Container>
    <UpdateAction id="saveSysProductsAction">
      <Property name="executingMessage">正在处理...</Property>
      <Property name="successMessage">操作成功</Property>
      <Property name="dataResolver">sysProductAction#saveSysProducts</Property>
      <UpdateItem>
        <Property name="dataSet">dataSetSysProduct</Property>
      </UpdateItem>
    </UpdateAction>
    <Dialog id="dialogSysProduct">
      <ClientEvent name="onClose">
     view.get(&quot;#dataSetSysProduct&quot;).getData(&quot;!CURRENT_NODE&quot;).cancel();
	view.get(&quot;#dialogSysProduct&quot;).hide();
     </ClientEvent>
      <Property name="caption">信息编辑</Property>
      <Property name="center">true</Property>
      <Property name="border">normal</Property>
      <Property name="minimizeable">true</Property>
      <Property name="maximizeable">true</Property>
      <Property name="modal">true</Property>
      <Property name="width">60%</Property>
      <Property name="height">80%</Property>
      <Buttons>
        <Button>
          <ClientEvent name="onClick">

var action = view.get(&quot;#saveSysProductsAction&quot;);
			var dialog=view.get(&quot;#dialogSysProduct&quot;);
				action.execute(function(){
					dialog.hide();
				});</ClientEvent>
          <Property name="caption">确定</Property>
          <Property name="icon">url(>skin>common/icons.gif) -20px -0px</Property>
        </Button>
        <Button>
          <ClientEvent name="onClick">      
          
          view.get(&quot;#dataSetSysProduct&quot;).getData(&quot;!CURRENT_NODE&quot;).cancel();
		view.get(&quot;#dialogSysProduct&quot;).hide();
              	
		  </ClientEvent>
          <Property name="caption">取消</Property>
          <Property name="icon">url(>skin>common/icons.gif) -180px -160px</Property>
        </Button>
      </Buttons>
      <Children>
        <AutoForm id="autoFormSysProduct">
          <Property name="dataType">dataTypeSysProduct</Property>
          <Property name="dataSet">dataSetSysProduct</Property>
          <Property name="labelAlign">right</Property>
          <Property name="hideMode">visibility</Property>
          <Property name="dataPath">!CURRENT_NODE</Property>
          <AutoFormElement>
            <Property name="name">productCode</Property>
            <Property name="property">productCode</Property>
            <Property name="hideMode">display</Property>
            <Property name="readOnly">true</Property>
            <Editor>
              <TextEditor>
                <Property name="blankText">${req[&quot;com.innofi.component.rbac.product.pojo.SysProduct.productCode&quot;].propertyBlankText}</Property>
                <Property name="tip">${req[&quot;com.innofi.component.rbac.product.pojo.SysProduct.productCode&quot;].propertyTip}</Property>
              </TextEditor>
            </Editor>
          </AutoFormElement>
          <AutoFormElement>
            <Property name="name">productName</Property>
            <Property name="property">productName</Property>
            <Property name="hideMode">display</Property>
            <Property name="readOnly">false</Property>
            <Editor>
              <TextEditor>
                <Property name="blankText">${req[&quot;com.innofi.component.rbac.product.pojo.SysProduct.productName&quot;].propertyBlankText}</Property>
                <Property name="tip">${req[&quot;com.innofi.component.rbac.product.pojo.SysProduct.productName&quot;].propertyTip}</Property>
              </TextEditor>
            </Editor>
          </AutoFormElement>
          <AutoFormElement>
            <Property name="name">busilineName</Property>
            <Property name="property">busilineName</Property>
            <Property name="hideMode">display</Property>
            <Property name="readOnly">false</Property>
            <Property name="userData">
              <Entity>
                <Property name="code">busilineId</Property>
              </Entity>
            </Property>
            <Property name="trigger">busiSingleUpdtDropDown</Property>
            <Editor>
              <TextEditor>
                <Property name="blankText">${req[&quot;com.innofi.component.rbac.product.pojo.SysProduct.busilineId&quot;].propertyBlankText}</Property>
                <Property name="tip">${req[&quot;com.innofi.component.rbac.product.pojo.SysProduct.busilineId&quot;].propertyTip}</Property>
              </TextEditor>
            </Editor>
          </AutoFormElement>
          <AutoFormElement>
            <Property name="name">manageOrgName</Property>
            <Property name="property">manageOrgName</Property>
            <Property name="userData">
              <Entity>
                <Property name="code">manageOrgCode</Property>
              </Entity>
            </Property>
            <Property name="trigger">orgSingleUpdtDropDown</Property>
            <Editor/>
          </AutoFormElement>
          <AutoFormElement>
            <Property name="name">status</Property>
            <Property name="property">status</Property>
            <Property name="hideMode">display</Property>
            <Property name="readOnly">false</Property>
            <Editor/>
          </AutoFormElement>
          <AutoFormElement>
            <Property name="name">seq</Property>
            <Property name="property">seq</Property>
            <Property name="hideMode">display</Property>
            <Property name="readOnly">false</Property>
            <Editor>
              <TextEditor>
                <Property name="blankText">${req[&quot;com.innofi.component.rbac.product.pojo.SysProduct.seq&quot;].propertyBlankText}</Property>
                <Property name="tip">${req[&quot;com.innofi.component.rbac.product.pojo.SysProduct.seq&quot;].propertyTip}</Property>
              </TextEditor>
            </Editor>
          </AutoFormElement>
          <AutoFormElement layoutConstraint="colSpan:2">
            <Property name="name">productDesc</Property>
            <Property name="property">productDesc</Property>
            <Property name="hideMode">display</Property>
            <Property name="readOnly">false</Property>
            <Editor>
              <TextArea>
                <Property name="blankText">${req[&quot;com.innofi.component.rbac.product.pojo.SysProduct.productDesc&quot;].propertyBlankText}</Property>
                <Property name="tip">${req[&quot;com.innofi.component.rbac.product.pojo.SysProduct.productDesc&quot;].propertyTip}</Property>
              </TextArea>
            </Editor>
          </AutoFormElement>
        </AutoForm>
      </Children>
      <Tools/>
    </Dialog>
    <Dialog id="addDialogSysProduct">
      <ClientEvent name="onClose">
     view.get(&quot;#dataSetSysProduct&quot;).getData(&quot;!CURRENT_NODE&quot;).cancel();
	view.get(&quot;#dialogSysProduct&quot;).hide();
     </ClientEvent>
      <Property name="caption">新增信息</Property>
      <Property name="center">true</Property>
      <Property name="border">normal</Property>
      <Property name="minimizeable">true</Property>
      <Property name="maximizeable">true</Property>
      <Property name="modal">true</Property>
      <Property name="width">60%</Property>
      <Property name="height">80%</Property>
      <Buttons>
        <Button>
          <ClientEvent name="onClick">

var action = view.get(&quot;#saveSysProductsAction&quot;);
			var dialog=view.get(&quot;#addDialogSysProduct&quot;);
				action.execute(function(){
					dialog.hide();
				});</ClientEvent>
          <Property name="caption">确定</Property>
          <Property name="icon">url(>skin>common/icons.gif) -20px -0px</Property>
        </Button>
        <Button>
          <ClientEvent name="onClick">      
          
          view.get(&quot;#dataSetSysProduct&quot;).getData(&quot;!CURRENT_NODE&quot;).cancel();
		view.get(&quot;#addDialogSysProduct&quot;).hide();
              	
		  </ClientEvent>
          <Property name="caption">取消</Property>
          <Property name="icon">url(>skin>common/icons.gif) -180px -160px</Property>
        </Button>
      </Buttons>
      <Children>
        <AutoForm id="addAutoFormSysProduct">
          <Property name="dataType">dataTypeSysProduct</Property>
          <Property name="dataSet">dataSetSysProduct</Property>
          <Property name="labelAlign">right</Property>
          <Property name="hideMode">visibility</Property>
          <Property name="dataPath">!CURRENT_NODE</Property>
          <AutoFormElement>
            <Property name="name">productCode</Property>
            <Property name="property">productCode</Property>
            <Property name="hideMode">display</Property>
            <Property name="labelAlign">right</Property>
            <Property name="readOnly">false</Property>
            <Editor>
              <TextEditor>
                <Property name="blankText">${req[&quot;com.innofi.component.rbac.product.pojo.SysProduct.productCode&quot;].propertyBlankText}</Property>
                <Property name="tip">${req[&quot;com.innofi.component.rbac.product.pojo.SysProduct.productCode&quot;].propertyTip}</Property>
              </TextEditor>
            </Editor>
          </AutoFormElement>
          <AutoFormElement>
            <Property name="name">productName</Property>
            <Property name="property">productName</Property>
            <Property name="hideMode">display</Property>
            <Property name="labelAlign">right</Property>
            <Property name="readOnly">false</Property>
            <Editor>
              <TextEditor>
                <Property name="blankText">${req[&quot;com.innofi.component.rbac.product.pojo.SysProduct.productName&quot;].propertyBlankText}</Property>
                <Property name="tip">${req[&quot;com.innofi.component.rbac.product.pojo.SysProduct.productName&quot;].propertyTip}</Property>
              </TextEditor>
            </Editor>
          </AutoFormElement>
          <AutoFormElement>
            <Property name="name">busilineName</Property>
            <Property name="property">busilineName</Property>
            <Property name="hideMode">display</Property>
            <Property name="readOnly">false</Property>
            <Property name="userData">
              <Entity>
                <Property name="code">busilineId</Property>
              </Entity>
            </Property>
            <Property name="trigger">busiSingleUpdtDropDown</Property>
            <Editor>
              <TextEditor>
                <Property name="blankText">${req[&quot;com.innofi.component.rbac.product.pojo.SysProduct.busilineId&quot;].propertyBlankText}</Property>
                <Property name="tip">${req[&quot;com.innofi.component.rbac.product.pojo.SysProduct.busilineId&quot;].propertyTip}</Property>
              </TextEditor>
            </Editor>
          </AutoFormElement>
          <AutoFormElement>
            <Property name="name">manageOrgName</Property>
            <Property name="property">manageOrgName</Property>
            <Property name="userData">
              <Entity>
                <Property name="code">manageOrgCode</Property>
              </Entity>
            </Property>
            <Property name="trigger">orgSingleUpdtDropDown</Property>
            <Editor/>
          </AutoFormElement>
          <AutoFormElement>
            <Property name="name">status</Property>
            <Property name="property">status</Property>
            <Property name="hideMode">display</Property>
            <Property name="labelAlign">right</Property>
            <Property name="readOnly">false</Property>
            <Editor/>
          </AutoFormElement>
          <AutoFormElement>
            <Property name="name">seq</Property>
            <Property name="property">seq</Property>
            <Property name="hideMode">display</Property>
            <Property name="labelAlign">right</Property>
            <Property name="readOnly">false</Property>
            <Editor>
              <TextEditor>
                <Property name="blankText">${req[&quot;com.innofi.component.rbac.product.pojo.SysProduct.seq&quot;].propertyBlankText}</Property>
                <Property name="tip">${req[&quot;com.innofi.component.rbac.product.pojo.SysProduct.seq&quot;].propertyTip}</Property>
              </TextEditor>
            </Editor>
          </AutoFormElement>
          <AutoFormElement layoutConstraint="colSpan:2">
            <Property name="name">productDesc</Property>
            <Property name="property">productDesc</Property>
            <Property name="hideMode">display</Property>
            <Property name="readOnly">false</Property>
            <Editor>
              <TextArea>
                <Property name="blankText">${req[&quot;com.innofi.component.rbac.product.pojo.SysProduct.productDesc&quot;].propertyBlankText}</Property>
                <Property name="tip">${req[&quot;com.innofi.component.rbac.product.pojo.SysProduct.productDesc&quot;].propertyTip}</Property>
              </TextArea>
            </Editor>
          </AutoFormElement>
        </AutoForm>
      </Children>
      <Tools/>
    </Dialog>
    <Dialog id="lookdialogSysProduct">
      <ClientEvent name="onClose">
     view.get(&quot;#dataSetSysProduct&quot;).getData().cancel();
	view.get(&quot;#lookdialogSysProduct&quot;).hide();
     </ClientEvent>
      <Property name="caption">信息查看</Property>
      <Property name="center">true</Property>
      <Property name="border">normal</Property>
      <Property name="minimizeable">true</Property>
      <Property name="maximizeable">true</Property>
      <Property name="modal">true</Property>
      <Property name="height">80%</Property>
      <Property name="width">60%</Property>
      <Buttons/>
      <Children>
        <AutoForm id="lookFormSysProduct">
          <Property name="dataType">dataTypeSysProduct</Property>
          <Property name="dataSet">dataSetSysProduct</Property>
          <Property name="labelAlign">right</Property>
          <Property name="hideMode">visibility</Property>
          <Property name="autoCreateElements">true</Property>
        </AutoForm>
      </Children>
      <Tools/>
    </Dialog>
    <CustomDropDown id="orgSingleDropDown">
      <ClientEvent name="onClose">
		      if(arg.selectedValue){
					var entity = new dorado.Entity();
					entity.fromJSON(JSON.parse(arg.selectedValue));
					var dataSet=self.get(&quot;editor&quot;).get(&quot;parent&quot;).get(&quot;dataSet&quot;);
					var name=self.get(&quot;editor&quot;).get(&quot;parent&quot;).get(&quot;property&quot;);
					var code=self.get(&quot;editor&quot;).get(&quot;parent&quot;).get(&quot;userData.code&quot;);
					dataSet.getData(&quot;#&quot;).set(code,entity.get(&quot;orgCode&quot;));
					dataSet.getData(&quot;#&quot;).set(name,entity.get(&quot;orgName&quot;));
					dataSet.notifyObservers();
				}
				arg.selectedValue = undefined;
				return false;
		      </ClientEvent>
      <Property name="height">300</Property>
      <Property name="autoOpen">true</Property>
      <Property name="editable">false</Property>
      <Property name="minWidth">200</Property>
      <Property name="minHeight">250</Property>
      <IFrame>
        <Property name="path">${request.contextPath}/com/innofi/module/commons/view/dropdown/OrgSelect.d?selectType=singleTree&amp;category=0&amp;expandLevel=&amp;orgCode=&amp;dropdown=orgSingleDropDown</Property>
      </IFrame>
    </CustomDropDown>
    <CustomDropDown id="orgSingleUpdtDropDown">
      <ClientEvent name="onClose">
		      if(arg.selectedValue){
					var entity = new dorado.Entity();
					entity.fromJSON(JSON.parse(arg.selectedValue));
					var dataSet=self.get(&quot;editor&quot;).get(&quot;parent&quot;).get(&quot;dataSet&quot;);
					var name=self.get(&quot;editor&quot;).get(&quot;parent&quot;).get(&quot;property&quot;);
					var code=self.get(&quot;editor&quot;).get(&quot;parent&quot;).get(&quot;userData.code&quot;);
					dataSet.getData(&quot;!CURRENT_NODE&quot;).set(code,entity.get(&quot;orgCode&quot;));
					dataSet.getData(&quot;!CURRENT_NODE&quot;).set(name,entity.get(&quot;orgName&quot;));
					dataSet.notifyObservers();
				}
				arg.selectedValue = undefined;
				return false;
		      </ClientEvent>
      <Property name="height">300</Property>
      <Property name="autoOpen">true</Property>
      <Property name="editable">false</Property>
      <Property name="minWidth">200</Property>
      <Property name="minHeight">250</Property>
      <IFrame>
        <Property name="path">${request.contextPath}/com/innofi/module/commons/view/dropdown/OrgSelect.d?selectType=singleTree&amp;category=0&amp;expandLevel=&amp;orgCode=&amp;dropdown=orgSingleUpdtDropDown</Property>
      </IFrame>
    </CustomDropDown>
    <CustomDropDown id="busiSingleDropDown">
      <ClientEvent name="onClose">if(arg.selectedValue){
	var entity = new dorado.Entity();
	entity.fromJSON(JSON.parse(arg.selectedValue));
	var dataSet=self.get(&quot;editor&quot;).get(&quot;parent&quot;).get(&quot;dataSet&quot;);
	var name=self.get(&quot;editor&quot;).get(&quot;parent&quot;).get(&quot;property&quot;);
	var code=self.get(&quot;editor&quot;).get(&quot;parent&quot;).get(&quot;userData.code&quot;);
	dataSet.getData(&quot;#&quot;).set(code,entity.get(&quot;id&quot;));
	dataSet.getData(&quot;#&quot;).set(name,entity.get(&quot;busilineName&quot;));
	
	dataSet.notifyObservers();
}
arg.selectedValue = undefined;
return false;</ClientEvent>
      <Property name="height">300</Property>
      <Property name="autoOpen">true</Property>
      <Property name="editable">false</Property>
      <IFrame id="busiSingleFrame">
        <Property name="path">${request.contextPath}/com/innofi/module/commons/view/dropdown/BusiLineSelect.d?selectType=singleTree&amp;id=&amp;dropdown=busiSingleDropDown</Property>
      </IFrame>
    </CustomDropDown>
    <CustomDropDown id="busiSingleUpdtDropDown">
      <ClientEvent name="onClose">if(arg.selectedValue){
	var entity = new dorado.Entity();
	entity.fromJSON(JSON.parse(arg.selectedValue));
	var dataSet=self.get(&quot;editor&quot;).get(&quot;parent&quot;).get(&quot;dataSet&quot;);
	var name=self.get(&quot;editor&quot;).get(&quot;parent&quot;).get(&quot;property&quot;);
	var code=self.get(&quot;editor&quot;).get(&quot;parent&quot;).get(&quot;userData.code&quot;);
	dataSet.getData(&quot;!CURRENT_NODE&quot;).set(code,entity.get(&quot;id&quot;));
	dataSet.getData(&quot;!CURRENT_NODE&quot;).set(name,entity.get(&quot;busilineName&quot;));
	
	dataSet.notifyObservers();
}
arg.selectedValue = undefined;
return false;</ClientEvent>
      <Property name="height">300</Property>
      <Property name="autoOpen">true</Property>
      <Property name="editable">false</Property>
      <IFrame>
        <Property name="path">${request.contextPath}/com/innofi/module/commons/view/dropdown/BusiLineSelect.d?selectType=singleTree&amp;id=&amp;dropdown=busiSingleUpdtDropDown</Property>
      </IFrame>
    </CustomDropDown>
    <AjaxAction id="checkCode">
      <Property name="service">sysProductAction#checkProductCode</Property>
    </AjaxAction>
    <AjaxAction id="delAction">
      <Property name="successMessage">停用成功</Property>
      <Property name="service">sysProductAction#invalidProduct</Property>
    </AjaxAction>
  </View>
</ViewConfig>
